#############################################################################
# Makefile for building: g500
# Generated by qmake (2.01a) (Qt 4.5.2) on: Sun Mar 16 22:39:36 2014
# Project:  g500.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile g500.pro
#############################################################################

####### Compiler, tools and options

CC            = mpicc
CXX           = mpicxx
DEFINES       = 
CFLAGS        = -pipe -std=c99 -fopenmp -fast -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -fopenmp -DINSTRUMENTED -fast -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I.
LINK          = mpicxx
LFLAGS        = -fopenmp -Wl,-O3
LIBS          = $(SUBLIBS)   
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		generator/utils.c \
		generator/splittable_mrg.c \
		generator/make_graph.c \
		generator/graph_generator.c \
		simplecpubfs.cpp \
		validate/onesided.c \
		validate/onesided_emul.c \
		validate/validate.cpp \
		cpubfs_bin.cpp 
OBJECTS       = main.o \
		utils.o \
		splittable_mrg.o \
		make_graph.o \
		graph_generator.o \
		simplecpubfs.o \
		onesided.o \
		onesided_emul.o \
		validate.o \
		cpubfs_bin.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		g500.pro
QMAKE_TARGET  = g500
DESTDIR       = 
TARGET        = g500

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

qmake:  FORCE
	@$(QMAKE) -unix -o Makefile g500.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/g5001.0.0 || $(MKDIR) .tmp/g5001.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/g5001.0.0/ && (cd `dirname .tmp/g5001.0.0` && $(TAR) g5001.0.0.tar g5001.0.0 && $(COMPRESS) g5001.0.0.tar) && $(MOVE) `dirname .tmp/g5001.0.0`/g5001.0.0.tar.gz . && $(DEL_FILE) -r .tmp/g5001.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

main.o: main.cpp validate/validate.h \
		distmatrix2d.hh \
		generator/graph_generator.h \
		generator/user_settings.h \
		validate/mpi_workarounds.h \
		generator/utils.h \
		generator/splittable_mrg.h \
		validate/onesided.h \
		generator/make_graph.h \
		opencl/OCLrunner.hh \
		opencl/opencl_bfs.h \
		globalbfs.h \
		distmatrix2d.h \
		cpubfs_bin.h \
		globalbfs.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

utils.o: generator/utils.c generator/splittable_mrg.h \
		generator/graph_generator.h \
		generator/user_settings.h \
		generator/utils.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o utils.o generator/utils.c

splittable_mrg.o: generator/splittable_mrg.c generator/mod_arith.h \
		generator/user_settings.h \
		generator/mod_arith_64bit.h \
		generator/mod_arith_32bit.h \
		generator/splittable_mrg.h \
		generator/mrg_transitions.c
	$(CC) -c $(CFLAGS) $(INCPATH) -o splittable_mrg.o generator/splittable_mrg.c

make_graph.o: generator/make_graph.c generator/graph_generator.h \
		generator/user_settings.h \
		generator/utils.h \
		generator/splittable_mrg.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o make_graph.o generator/make_graph.c

graph_generator.o: generator/graph_generator.c generator/user_settings.h \
		generator/splittable_mrg.h \
		generator/graph_generator.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o graph_generator.o generator/graph_generator.c

simplecpubfs.o: simplecpubfs.cpp simplecpubfs.h \
		globalbfs.hh \
		distmatrix2d.hh \
		generator/graph_generator.h \
		generator/user_settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o simplecpubfs.o simplecpubfs.cpp

onesided.o: validate/onesided.c validate/mpi_workarounds.h \
		validate/onesided.h \
		generator/utils.h \
		generator/splittable_mrg.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o onesided.o validate/onesided.c

onesided_emul.o: validate/onesided_emul.c validate/mpi_workarounds.h \
		validate/onesided.h \
		generator/utils.h \
		generator/splittable_mrg.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o onesided_emul.o validate/onesided_emul.c

validate.o: validate/validate.cpp distmatrix2d.hh \
		generator/graph_generator.h \
		generator/user_settings.h \
		validate/validate.h \
		validate/mpi_workarounds.h \
		generator/utils.h \
		generator/splittable_mrg.h \
		validate/onesided.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o validate.o validate/validate.cpp

cpubfs_bin.o: cpubfs_bin.cpp cpubfs_bin.h \
		globalbfs.hh \
		distmatrix2d.hh \
		generator/graph_generator.h \
		generator/user_settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cpubfs_bin.o cpubfs_bin.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

