#############################################################################
# Makefile for building: g500
# Generated by qmake (3.0) (Qt 5.0.2) on: Mo. Apr. 7 04:09:26 2014
# Project:  g500.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt5/bin/qmake -o Makefile g500.pro
#############################################################################

MAKEFILE      = Makefile

####### Compiler, tools and options

CC            = mpicc
CXX           = mpicxx
DEFINES       = 
CFLAGS        = -m64 -pipe -D_CUDA -std=c99 -fopenmp -g -Wall -W -fPIE $(DEFINES)
CXXFLAGS      = -m64 -pipe -D_CUDA -fopenmp -DINSTRUMENTED -g -Wall -W -fPIE $(DEFINES)
INCPATH       = -I/usr/share/qt5/mkspecs/linux-g++-64 -I. -I\"`which nvcc | sed 's,/bin/nvcc$$,,'`\"/include -I..
LINK          = mpicxx
LFLAGS        = -m64 -fopenmp -Wl,-g 
LIBS          = $(SUBLIBS) -L"`which nvcc | sed 's,/bin/nvcc$$,,'`"/lib64 -L"`which nvcc | sed 's,/bin/nvcc$$,,'`"/lib -lcudart -lcuda 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/x86_64-linux-gnu/qt5/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		generator/utils.c \
		generator/splittable_mrg.c \
		generator/make_graph.c \
		generator/graph_generator.c \
		simplecpubfs.cpp \
		validate/onesided.c \
		validate/onesided_emul.c \
		cpubfs_bin.cpp 
OBJECTS       = ${OBJECTS_DIR}cuda_bfs_cuda.o \
		main.o \
		utils.o \
		splittable_mrg.o \
		make_graph.o \
		graph_generator.o \
		simplecpubfs.o \
		onesided.o \
		onesided_emul.o \
		cpubfs_bin.o
DIST          = /usr/share/qt5/mkspecs/features/spec_pre.prf \
		/usr/share/qt5/mkspecs/common/shell-unix.conf \
		/usr/share/qt5/mkspecs/common/unix.conf \
		/usr/share/qt5/mkspecs/common/linux.conf \
		/usr/share/qt5/mkspecs/common/gcc-base.conf \
		/usr/share/qt5/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt5/mkspecs/common/g++-base.conf \
		/usr/share/qt5/mkspecs/common/g++-unix.conf \
		/usr/share/qt5/mkspecs/qconfig.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_bootstrap.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_concurrent.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_core.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_dbus.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_gui.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_network.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_opengl.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_platformsupport.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_printsupport.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_qml.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_qmldevtools.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_qmltest.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_quick.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_quickparticles.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_sql.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_testlib.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_widgets.pri \
		/usr/share/qt5/mkspecs/modules/qt_lib_xml.pri \
		/usr/share/qt5/mkspecs/features/qt_functions.prf \
		/usr/share/qt5/mkspecs/features/qt_config.prf \
		/usr/share/qt5/mkspecs/linux-g++-64/qmake.conf \
		/usr/share/qt5/mkspecs/features/spec_post.prf \
		/usr/share/qt5/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt5/mkspecs/features/default_pre.prf \
		/usr/share/qt5/mkspecs/features/unix/default_pre.prf \
		/usr/share/qt5/mkspecs/features/resolve_config.prf \
		/usr/share/qt5/mkspecs/features/default_post.prf \
		/usr/share/qt5/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt5/mkspecs/features/warn_on.prf \
		/usr/share/qt5/mkspecs/features/wayland-scanner.prf \
		/usr/share/qt5/mkspecs/features/testcase_targets.prf \
		/usr/share/qt5/mkspecs/features/exceptions.prf \
		/usr/share/qt5/mkspecs/features/yacc.prf \
		/usr/share/qt5/mkspecs/features/lex.prf \
		g500.pro \
		g500.pro
QMAKE_TARGET  = g500
DESTDIR       = 
TARGET        = g500


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

qmake: FORCE
	@$(QMAKE) -o Makefile g500.pro

qmake_all: FORCE

dist: 
	@test -d .tmp/g5001.0.0 || mkdir -p .tmp/g5001.0.0
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/g5001.0.0/ && $(COPY_FILE) --parents cuda/cuda_bfs.cu .tmp/g5001.0.0/ && (cd `dirname .tmp/g5001.0.0` && $(TAR) g5001.0.0.tar g5001.0.0 && $(COMPRESS) g5001.0.0.tar) && $(MOVE) `dirname .tmp/g5001.0.0`/g5001.0.0.tar.gz . && $(DEL_FILE) -r .tmp/g5001.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

compiler_cuda_make_all: ${OBJECTS_DIR}cuda_bfs_cuda.o
compiler_cuda_clean:
	-$(DEL_FILE) ${OBJECTS_DIR}cuda_bfs_cuda.o
${OBJECTS_DIR}cuda_bfs_cuda.o: cuda/cuda_bfs.cu
	nvcc -c -ccbin icc -Xcompiler -m64,-pipe,-D_CUDA,-DINSTRUMENTED,-g,-fopenmp,"`mpicxx --showme:compile`" -gencode=arch=compute_20,code=\"sm_20,compute_20\" -gencode=arch=compute_30,code=\"sm_30,compute_30\" --compiler-options -fno-strict-aliasing -use_fast_math --ptxas-options=-v -m64 -g -G -O3 -I ""`which nvcc | sed 's,/bin/nvcc$$,,'`"/include" -I ".." cuda/cuda_bfs.cu -o ${OBJECTS_DIR}cuda_bfs_cuda.o

compiler_wayland-server-header_make_all:
compiler_wayland-server-header_clean:
compiler_wayland-client-header_make_all:
compiler_wayland-client-header_clean:
compiler_wayland-code_make_all:
compiler_wayland-code_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_cuda_clean 

####### Compile

main.o: main.cpp validate/validate.h \
		distmatrix2d.hh \
		generator/graph_generator.h \
		generator/user_settings.h \
		validate/mpi_workarounds.h \
		generator/utils.h \
		generator/splittable_mrg.h \
		validate/onesided.h \
		generator/make_graph.h \
		opencl/OCLrunner.hh \
		opencl/opencl_bfs.h \
		cuda/cuda_bfs.h \
		cuda/cuda_support.hh \
		../b40c/util/basic_utils.cuh \
		../b40c/graph/bfs/csr_problem_2d.cuh \
		../b40c/util/cuda_properties.cuh \
		../b40c/util/memset_kernel.cuh \
		../b40c/util/cta_work_progress.cuh \
		../b40c/util/error_utils.cuh \
		../b40c/util/device_intrinsics.cuh \
		../b40c/util/reduction/warp_reduce.cuh \
		../b40c/util/operators.cuh \
		../b40c/util/io/modified_load.cuh \
		../b40c/util/vector_types.cuh \
		../b40c/util/io/modified_store.cuh \
		../b40c/util/multiple_buffering.cuh \
		../b40c/graph/bfs/problem_type.cuh \
		../b40c/partition/problem_type.cuh \
		../b40c/radix_sort/sort_utils.cuh \
		../b40c/graph/bfs/enactor_multi_gpu_2d.cuh \
		../b40c/util/spine.cuh \
		../b40c/util/kernel_runtime_stats.cuh \
		../b40c/graph/bfs/enactor_base.cuh \
		../b40c/graph/bfs/two_phase/contract_atomic/kernel.cuh \
		../b40c/util/cta_work_distribution.cuh \
		../b40c/graph/bfs/two_phase/contract_atomic/cta.cuh \
		../b40c/util/scan/cooperative_scan.cuh \
		../b40c/util/srts_grid.cuh \
		../b40c/util/numeric_traits.cuh \
		../b40c/util/reduction/cooperative_reduction.cuh \
		../b40c/util/reduction/serial_reduce.cuh \
		../b40c/util/scan/serial_scan.cuh \
		../b40c/util/scan/warp_scan.cuh \
		../b40c/util/io/initialize_tile.cuh \
		../b40c/util/io/load_tile.cuh \
		../b40c/util/io/store_tile.cuh \
		../b40c/util/io/scatter_tile.cuh \
		../b40c/util/reduction/tree_reduce.cuh \
		../b40c/graph/bfs/two_phase/contract_atomic/kernel_policy.cuh \
		../b40c/util/srts_details.cuh \
		../b40c/graph/bfs/two_phase/expand_atomic/kernel.cuh \
		../b40c/graph/bfs/two_phase/expand_atomic/cta.cuh \
		../b40c/util/soa_tuple.cuh \
		../b40c/util/scan/soa/cooperative_soa_scan.cuh \
		../b40c/util/reduction/soa/cooperative_soa_reduction.cuh \
		../b40c/util/reduction/soa/serial_soa_reduce.cuh \
		../b40c/util/reduction/soa/warp_soa_reduce.cuh \
		../b40c/util/scan/soa/warp_soa_scan.cuh \
		../b40c/util/scan/soa/serial_soa_scan.cuh \
		../b40c/graph/bfs/two_phase/expand_atomic/kernel_policy.cuh \
		../b40c/util/srts_soa_details.cuh \
		../b40c/graph/bfs/partition_contract/policy.cuh \
		../b40c/partition/policy.cuh \
		../b40c/partition/spine/kernel.cuh \
		../b40c/scan/spine/kernel.cuh \
		../b40c/scan/downsweep/cta.cuh \
		../b40c/scan/problem_type.cuh \
		../b40c/reduction/problem_type.cuh \
		../b40c/scan/kernel_policy.cuh \
		../b40c/partition/upsweep/tuning_policy.cuh \
		../b40c/partition/downsweep/tuning_policy.cuh \
		../b40c/graph/bfs/partition_contract/upsweep/kernel.cuh \
		../b40c/graph/bfs/partition_contract/upsweep/cta.cuh \
		../b40c/partition/upsweep/cta.cuh \
		../b40c/partition/upsweep/aggregate_counters.cuh \
		../b40c/partition/upsweep/composite_counters.cuh \
		../b40c/partition/upsweep/tile.cuh \
		../b40c/graph/bfs/partition_contract/upsweep/tile.cuh \
		../b40c/graph/bfs/partition_contract/upsweep/kernel_policy.cuh \
		../b40c/partition/upsweep/kernel_policy.cuh \
		../b40c/graph/bfs/partition_contract/downsweep/kernel.cuh \
		../b40c/graph/bfs/partition_contract/downsweep/cta.cuh \
		../b40c/partition/downsweep/cta.cuh \
		../b40c/graph/bfs/partition_contract/downsweep/tile.cuh \
		../b40c/partition/downsweep/tile.cuh \
		../b40c/graph/bfs/partition_contract/downsweep/kernel_policy.cuh \
		../b40c/partition/downsweep/kernel_policy.cuh \
		../b40c/graph/bfs/copy/kernel.cuh \
		../b40c/graph/bfs/copy/cta.cuh \
		../b40c/graph/bfs/copy/kernel_policy.cuh \
		globalbfs.hh \
		cpubfs_bin.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

utils.o: generator/utils.c generator/splittable_mrg.h \
		generator/graph_generator.h \
		generator/user_settings.h \
		generator/utils.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o utils.o generator/utils.c

splittable_mrg.o: generator/splittable_mrg.c generator/mod_arith.h \
		generator/user_settings.h \
		generator/mod_arith_64bit.h \
		generator/mod_arith_32bit.h \
		generator/splittable_mrg.h \
		generator/mrg_transitions.c
	$(CC) -c $(CFLAGS) $(INCPATH) -o splittable_mrg.o generator/splittable_mrg.c

make_graph.o: generator/make_graph.c generator/graph_generator.h \
		generator/user_settings.h \
		generator/utils.h \
		generator/splittable_mrg.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o make_graph.o generator/make_graph.c

graph_generator.o: generator/graph_generator.c generator/user_settings.h \
		generator/splittable_mrg.h \
		generator/graph_generator.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o graph_generator.o generator/graph_generator.c

simplecpubfs.o: simplecpubfs.cpp simplecpubfs.h \
		globalbfs.hh \
		distmatrix2d.hh \
		generator/graph_generator.h \
		generator/user_settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o simplecpubfs.o simplecpubfs.cpp

onesided.o: validate/onesided.c validate/mpi_workarounds.h \
		validate/onesided.h \
		generator/utils.h \
		generator/splittable_mrg.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o onesided.o validate/onesided.c

onesided_emul.o: validate/onesided_emul.c validate/mpi_workarounds.h \
		validate/onesided.h \
		generator/utils.h \
		generator/splittable_mrg.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o onesided_emul.o validate/onesided_emul.c

cpubfs_bin.o: cpubfs_bin.cpp cpubfs_bin.h \
		globalbfs.hh \
		distmatrix2d.hh \
		generator/graph_generator.h \
		generator/user_settings.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cpubfs_bin.o cpubfs_bin.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

