mkdir -p bin
"/sw/kfs/cuda/4.2/linux_binary/bin/nvcc"  -gencode=arch=compute_20,code=\"sm_20,compute_20\"  -o bin/test_bfs_4.2_x86_64 test_bfs.cu -Xptxas -v -Xcudafe -# -Xptxas -abi=no -I/sw/kfs/openmpi/1.6.1/centos6.2_intel2011_sp1.11.339-torque-4.2.5/include/openmpi/opal/mca/hwloc/hwloc132/hwloc/include -I/sw/kfs/openmpi/1.6.1/centos6.2_intel2011_sp1.11.339-torque-4.2.5/include -I/sw/kfs/openmpi/1.6.1/centos6.2_intel2011_sp1.11.339-torque-4.2.5/include/openmp -L/opt/torque/4.2.5/lib -L/sw/kfs/openmpi/1.6.1/centos6.2_intel2011_sp1.11.339-torque-4.2.5/lib -lmpi -losmcomp -lrdmacm -libverbs -lrt -lnsl -lutil -lpsm_infinipath -ltorque -ldl -lm -lnuma -lrt -lnsl -lutil -m64 -I"/sw/kfs/cuda/4.2/linux_binary/bin/../include" -I.. -I../..  -O3  
../../b40c/graph/bfs/enactor_multi_node.cuh(535): error: argument list for class template "b40c::graph::bfs::CsrProblem" is missing
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(536): error: argument list for class template "b40c::graph::bfs::CsrProblem" is missing
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(537): error: argument list for class template "b40c::graph::bfs::CsrProblem" is missing
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(539): error: argument list for class template "b40c::graph::bfs::CsrProblem" is missing
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(539): error: reference variable "csr_problem" requires an initializer
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(580): error: expression must have pointer-to-class type
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(585): error: name followed by "::" must be a class or namespace name
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(588): error: identifier "CopyPolicy" is undefined
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(589): error: name followed by "::" must be a class or namespace name
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(589): error: expression must have pointer-to-class type
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(595): error: expression must have pointer-to-class type
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(596): error: expression must have pointer-to-class type
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(597): error: expression must have pointer-to-class type
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(598): error: expression must have pointer-to-class type
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(621): error: expression must have pointer-to-class type
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(622): error: expression must have pointer-to-class type
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(647): error: identifier "ContractPolicy" is undefined
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(648): error: name followed by "::" must be a class or namespace name
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(648): error: expression must have pointer-to-class type
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(657): error: expression must have pointer-to-class type
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(659): error: expression must have pointer-to-class type
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(660): error: expression must have pointer-to-class type
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(662): error: expression must have pointer-to-class type
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(663): error: expression must have pointer-to-class type
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(681): error: a break statement may only be used within a loop or switch
          detected during:
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(542): error: no suitable conversion function from "b40c::graph::bfs::EnactorMultiNode<false>::GpuControlBlock" to "b40c::graph::bfs::EnactorMultiNode<false>::GpuControlBlock *" exists
          detected during:
            instantiation of "void b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::nodeExchange(cudaError_t, int, int, int) [with INSTRUMENT=false]" 
(952): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(555): error: no suitable conversion function from "b40c::graph::bfs::EnactorMultiNode<false>::GpuControlBlock" to "b40c::graph::bfs::EnactorMultiNode<false>::GpuControlBlock *" exists
          detected during:
            instantiation of "void b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::nodeExchange(cudaError_t, int, int, int) [with INSTRUMENT=false]" 
(952): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(585): error: no instance of overloaded function "b40c::util::CtaWorkDistribution<SizeT>::Init [with SizeT=<error-type>]" matches the argument list
            argument types are: (SizeT, int)
            object type is: b40c::util::CtaWorkDistribution<<error-type>>
          detected during:
            instantiation of "void b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::nodeExchange(cudaError_t, int, int, int) [with INSTRUMENT=false]" 
(952): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(588): error: no instance of function template "b40c::graph::bfs::copy::Kernel" matches the argument list
            argument types are: (long long, SizeT, long long, long long, int, <error-type>, <error-type>, <error-type>, <error-type>, b40c::util::CtaWorkProgressLifetime, b40c::util::KernelRuntimeStatsLifetime)
          detected during:
            instantiation of "void b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::nodeExchange(cudaError_t, int, int, int) [with INSTRUMENT=false]" 
(952): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

../../b40c/graph/bfs/enactor_multi_node.cuh(647): error: no instance of function template "b40c::graph::bfs::two_phase::contract_atomic::Kernel" matches the argument list
            argument types are: (int, long long, int, long long, long long, int, long, VertexId *, <error-type>, VertexId *, <error-type>, <error-type>, b40c::util::CtaWorkProgressLifetime, <error-type>, <error-type>, b40c::util::KernelRuntimeStatsLifetime)
          detected during:
            instantiation of "void b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::nodeExchange(cudaError_t, int, int, int) [with INSTRUMENT=false]" 
(952): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch<ContractPolicy,ExpandPolicy,PartitionPolicy,CopyPolicy,CsrProblem>(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, ContractPolicy=b40c::graph::bfs::two_phase::contract_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 0, false, 8, 7, 0, 2, 5, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false, -1, 6>, ExpandPolicy=b40c::graph::bfs::two_phase::expand_atomic::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 8, 7, 0, 0, 5, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::ld::cg, b40c::util::io::ld::NONE, b40c::util::io::st::cg, true, 32, 512, 6>, PartitionPolicy=b40c::graph::bfs::partition_contract::Policy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, 6, 9, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, 8, 7, 0, 2, 7, 2, 0, 5, b40c::partition::downsweep::SCATTER_DIRECT, 8, 7, 1, 1, 0, 6>, CopyPolicy=b40c::graph::bfs::copy::KernelPolicy<b40c::graph::bfs::ProblemType<int, int, unsigned char, unsigned char, true>, 200, false, false, 6, 8, 6, 0, 0, b40c::util::io::ld::NONE, b40c::util::io::st::NONE, false>, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
(1009): here
            instantiation of "cudaError_t b40c::graph::bfs::EnactorMultiNode<INSTRUMENT>::EnactSearch(CsrProblem &, CsrProblem::VertexId, int, int, int) [with INSTRUMENT=false, CsrProblem=b40c::graph::bfs::CsrProblem<int, int, true>]" 
test_bfs.cu(739): here
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
test_bfs.cu(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
test_bfs.cu(980): here

test_bfs.cu(609): warning: variable "reference_check" was declared but never referenced
          detected during:
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
(980): here

test_bfs.cu(609): warning: variable "reference_check" was declared but never referenced
          detected during:
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=int, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=false]" 
(914): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=int, Value=int, SizeT=int]" 
(980): here

test_bfs.cu(609): warning: variable "reference_check" was declared but never referenced
          detected during:
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=long long, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=true]" 
(910): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=long long, Value=int, SizeT=int]" 
(1144): here

test_bfs.cu(609): warning: variable "reference_check" was declared but never referenced
          detected during:
            instantiation of "void RunTests<VertexId,Value,SizeT,INSTRUMENT,MARK_PREDECESSORS>(const b40c::graph::CsrGraph<VertexId, Value, SizeT> &, VertexId, __nv_bool, int, int, int, int, double, std::vector<int, std::allocator<int>>, int) [with VertexId=long long, Value=int, SizeT=int, INSTRUMENT=false, MARK_PREDECESSORS=false]" 
(914): here
            instantiation of "void RunTests(b40c::graph::CsrGraph<VertexId, Value, SizeT> &, b40c::CommandLineArgs &, int) [with VertexId=long long, Value=int, SizeT=int]" 
(1144): here

Front end time                       2.10 (CPU)       2.00 (elapsed)
30 errors detected in the compilation of "/tmp/tmpxft_00002912_00000000-4_test_bfs.cpp1.ii".
Total compilation time               2.11 (CPU)       2.00 (elapsed)
make: *** [bin/test_bfs_4.2_x86_64] Error 2
